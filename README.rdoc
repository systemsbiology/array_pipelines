== Array Pipelines

Microarray pipelines built off of SLIMarray as a data source. The front end uses SproutCore and the back end Ruby on Rails 3.

=== Setting up and running it in a development environment

Make sure you have the following prerequisites:
- Git
- Ruby 1.8.7
- RubyGems 1.3.6+
- Rails 3.0.1 (gem install rails -v=3.0.1)
- SproutCore 1.4.4 (gem install sproutcore -v=1.4.4)
- Java (for the build tools)
- SLIMarray (http://github.com/bmarzolf/slimarray)
- Addama Script Execution Service (http://code.google.com/docreader/#p=addama&s=addama&t=HowToScriptExec)

Clone the git repository and install the git submodules:

  git clone git://github.com/bmarzolf/array_pipelines.git
  cd array_pipelines
  git submodule init
  git submodule update

Copy the example configuration files:

  cp server/config/application.yml.example server/config/application.yml
  cp server/config/database.yml.example server/config/database.yml

Edit the configuration files to match your setup.

Install the necessary gems, load seed data and start the rails server:

  cd server
  bundle install
  rake db:migrate
  rake db:data:load
  rails server

In another terminal, start the SproutCore development server in your array_pipelines folder:

  sc-server

You should now be able to see the app at http://localhost:4020/calendar, and the administrative back end at http://localhost:3000/requirements

=== Deploying with Apache/Passenger

This assumes the prerequisites for development plus having the Apache2 and the latest Phusion Passenger installed (older versions may not work properly with Rails 3).

Install the application on your server:

  git clone git://github.com/bmarzolf/array_pipelines.git
  cd array_pipelines
  git submodule init
  git submodule update

Build the user interface:

  rake build:ui

This will build the static UI files and then place them into your /server/public/static and /server/public/ui folders.

Create a symlink named 'pipelines' from your Apache DocumentRoot to the public folder in the Rails 3 server, for instance:

  ln -s /local/apps/array_pipelines/server/public /var/www/pipelines

Add the following directive to your Apache2 configuration:

  RailsBaseURI /pipelines

Restart Apache, and the app should be available at http://yourserver/pipelines. The administrative backend can be reached at http://yourserver/pipelines/requirements.

=== Enabling authentication

Array pipelines can use RubyCAS-server to authenticate users, which also allows for administrator users. Enable this by editing server/config/initializers/app_config.rb

=== Steps for adding new pipelines

  * Make a copy of an existing pipeline under /apps, then customize as needed
  * Add the pipeline name under 'pipelines' in /server/config/application.yml
